!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.VueLineClamp=t():e.VueLineClamp=t()}(this,function(){return function(e){function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="/dist/",t(t.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=t.cssContent=".vue-line-clamp {display:block;display:-webkit-box;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}",o=function(e,t,n){if(n){var i=parseFloat(window.getComputedStyle(e).lineHeight),o=i*t;e.style.maxHeight=o?o+"px":"",e.style.overflowX="hidden"}else e.style.webkitLineClamp=t};t.default={install:function(e){if(!1!==(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).includeCss){var t=window.document.styleSheets[0];if(t)t.insertRule(i);else{var n=window.document.createElement("style");n.appendChild(window.document.createTextNode(i)),window.document.head.appendChild(n)}}var l=!("webkitLineClamp"in document.body.style);e.directive("line-clamp",{bind:function(e){e.classList.add("vue-line-clamp")},inserted:function(e,t){o(e,t.value,l)},updated:function(e,t){o(e,t.value,l)}})}}}])});
//# sourceMappingURL=main.min.js.map